<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rh.mapper.TeacherMapper">
    <resultMap id="BaseResultMap" type="com.rh.model.Teacher">
        <id column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="teacher_phone" property="teacherPhone" jdbcType="VARCHAR"/>
    </resultMap>


    <select id="findById" resultType="com.rh.model.Teacher">
        select *
        from teacher
        where teacher_id = #{teacherId}
    </select>

    <select id="login" resultType="com.rh.model.Teacher">
        select *
        from teacher
        where teacher_id = #{teacherId}
          and password = #{password}
    </select>
    <select id="findTeacher" resultType="com.rh.model.Teacher">
        select *
        from teacher
        <where>
            <if test="teacher_id != null and teacher_id != ''">
                teacher_id LIKE CONCAT('%', #{teacher_id}, '%')
            </if>
            <if test="teacher_name != null and teacher_name != ''">
                AND teacher_name LIKE CONCAT('%', #{teacher_name}, '%')
            </if>
        </where>
    </select>
    <select id="findAll" resultType="com.rh.model.Teacher">
        select * from teacher
    </select>

    <insert id="insert" parameterType="com.rh.model.Teacher">
        insert into teacher (teacher_id, teacher_name, password,
                             sex, teacher_phone)
        values (#{teacherId,jdbcType=INTEGER}, #{teacherName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{sex,jdbcType=VARCHAR}, #{teacherPhone,jdbcType=VARCHAR})
    </insert>
    <delete id="del" parameterType="java.lang.Integer">
        delete
        from teacher
        where teacher_id = #{teacher,jdbcType=INTEGER}
    </delete>
    <insert id="add" parameterType="com.rh.model.Teacher">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="teacherName != null">
                teacher_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="teacherPhone != null">
                teacher_phone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherId != null">
                #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="teacherName != null">
                #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="teacherPhone != null">
                #{teacherPhone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="edit" parameterType="com.rh.model.Teacher">
        update teacher
        <set>
            <if test="teacherName != null">
                teacher_name = #{teacherName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="teacherPhone != null">
                teacher_phone = #{teacherPhone,jdbcType=VARCHAR},
            </if>
        </set>
        where teacher_id = #{teacherId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.rh.model.Teacher">
        update teacher
        set teacher_name  = #{teacherName,jdbcType=VARCHAR},
            password      = #{password,jdbcType=VARCHAR},
            sex           = #{sex,jdbcType=VARCHAR},
            teacher_phone = #{teacherPhone,jdbcType=VARCHAR}
        where teacher_id = #{teacherId,jdbcType=INTEGER}
    </update>
</mapper>
