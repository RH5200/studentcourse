<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rh.mapper.ScoreMapper">
    <resultMap id="BaseResultMap" type="com.rh.model.Score">
        <id column="sctid" property="sctid" jdbcType="INTEGER"/>
        <result column="student_id" property="studentId" jdbcType="INTEGER"/>
        <result column="course_id" property="courseId" jdbcType="INTEGER"/>
        <result column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
        <result column="score" property="score" jdbcType="REAL"/>
        <result column="term" property="term" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        sctid
        , student_id, course_id, teacher_id, score, term
    </sql>
    <select id="findScore" resultType="com.rh.model.CourseTeacherInfo">
        SELECT c.course_id,
               c.course_name,
               c.course_credit,
               s.score,
               t.teacher_id,
               t.teacher_name,
               s.term,
               s.sctid
        FROM studentcourse.course c
                 INNER JOIN studentcourse.score s ON c.course_id = s.course_id
                 INNER JOIN studentcourse.teacher t ON s.teacher_id = t.teacher_id
        where s.student_id = #{student_id}
    </select>
    <select id="studentScore" resultType="com.rh.model.CourseTeacherInfo">
        SELECT DISTINCT c.course_id, c.course_name, c.course_credit, s.score, stu.student_id,stu.student_name,
        s.term,s.sctid,cl.*,g.*
        FROM studentcourse.course c
        INNER JOIN studentcourse.score s ON c.course_id = s.course_id
        INNER JOIN studentcourse.teacher t ON s.teacher_id = t.teacher_id
        INNER JOIN studentcourse.student stu ON stu.student_id = s.student_id
        INNER JOIN studentcourse.class cl ON cl.class_id = stu.class_id
        INNER JOIN studentcourse.grade g ON g.grade_id = stu.grade_id
        ,studentcourse.class, studentcourse.grade
        where  cl.class_id = #{class_id,jdbcType=INTEGER}
        <if test="teacher_id != null and teacher_id != ''">
            AND t.teacher_id = #{teacher_id,jdbcType=INTEGER}
        </if>
        <if test="student_id != null and student_id != ''">
            AND stu.student_id LIKE CONCAT('%', #{student_id}, '%')
        </if>
        <if test="student_name != null and student_name != ''">
            AND stu.student_name LIKE CONCAT('%', #{student_name}, '%')
        </if>
    </select>

    <select id="findOne" resultType="com.rh.model.Score">
        select *
        from score
        WHERE student_id = #{studentId,jdbcType=INTEGER}
          AND course_id = #{courseId,jdbcType=INTEGER}
          AND teacher_id = #{teacherId,jdbcType=INTEGER}
          AND term = #{term,jdbcType=VARCHAR}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from score
        where sctid = #{sctid,jdbcType=INTEGER}
    </select>
    <select id="studentClass" resultType="com.rh.model.CourseTeacherInfo">
        SELECT DISTINCT c.*, g.*
        FROM studentcourse.student s
                 INNER JOIN studentcourse.class c ON c.class_id = s.class_id
                 INNER JOIN studentcourse.grade g ON g.grade_id = s.grade_id
                 INNER JOIN studentcourse.score sc ON sc.student_id = s.student_id
                 INNER JOIN studentcourse.teacher t ON t.teacher_id = sc.teacher_id
        <where>
            <if test="teacher_id != null and teacher_id != ''">
                t.teacher_id = #{teacher_id,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from score
        where sctid = #{sctid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.rh.model.Score">
        insert into score (sctid, student_id, course_id,
                           teacher_id, score, term)
        values (#{sctid,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER},
                #{teacherId,jdbcType=INTEGER}, #{score,jdbcType=REAL}, #{term,jdbcType=VARCHAR})
    </insert>
    <insert id="insertScore" parameterType="com.rh.model.Score">
        insert into score
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sctid != null">
                sctid,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="term != null">
                term,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sctid != null">
                #{sctid,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                #{score,jdbcType=REAL},
            </if>
            <if test="term != null">
                #{term,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="editScore" parameterType="com.rh.model.Score">
        update score
        <set>
            <if test="score != null">
                score = #{score,jdbcType=REAL},
            </if>
        </set>
        where sctid = #{sctid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.rh.model.Score">
        update score
        <set>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=REAL},
            </if>
            <if test="term != null">
                term = #{term,jdbcType=VARCHAR},
            </if>
        </set>
        where sctid = #{sctid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.rh.model.Score">
        update score
        set student_id = #{studentId,jdbcType=INTEGER},
            course_id  = #{courseId,jdbcType=INTEGER},
            teacher_id = #{teacherId,jdbcType=INTEGER},
            score      = #{score,jdbcType=REAL},
            term       = #{term,jdbcType=VARCHAR}
        where sctid = #{sctid,jdbcType=INTEGER}
    </update>
</mapper>
